/*!
\mainpage Unity Action API

\tableofcontents

\section sec_introduction Introduction

Unity Action API offers a way to easily integrate with the Unity components outside of the application such as the Launcher, HUD, AppMenu and MessagingMenu.

Applications have internally different types of actions with different life-cycles. Some actions are application wide that are relevant and
available throughout the whole life-cycle of the application. Other actions are context specific and only available when the application is in
certain visual state, such as in image editing mode. See \ref page_contexts "Action Contexts" for more details.

Application can define application wide actions dynamically during runtime and as offline (jumplist) actions that are available even if the
application is not running. Activating an offline action will launch the application when necessary.

Unity Action API can be used with three ways:
 - \ref using-cpp "using this Qt C++ API"
 - Using the QML module directly (see the QML documentation)
 - Using the UI Toolkit

UI Toolkit simplifies the ActionContext management and provides ActionManager as part of the MainView. See the UI Toolkit documentation for
more details.

\section sec_general General Topics

 - \ref page_contexts "Action Contexts"
 - \ref page_preview-actions "Preview Actions"
 - \ref page_platform-integration "Platform Integration"
 - \ref page_offline-actions "Offline Actions"
 - \ref page_future-plans "Future Development Plans"

\section sec_bug_reports Reporting Bugs
If you find any problems with the or this documentation,
please file a bug in Unity Action API [Launchpad page](https://bugs.launchpad.net/unity-action-api).
*/
